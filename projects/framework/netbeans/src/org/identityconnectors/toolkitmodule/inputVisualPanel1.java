/*
 * ====================
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS HEADER.
 * 
 * Copyright 2007-2008 Sun Microsystems, Inc. All rights reserved.     
 * 
 * The contents of this file are subject to the terms of the Common Development 
 * and Distribution License("CDDL") (the "License").  You may not use this file 
 * except in compliance with the License.
 * 
 * You can obtain a copy of the License at 
 * http://IdentityConnectors.dev.java.net/legal/license.txt
 * See the License for the specific language governing permissions and limitations 
 * under the License. 
 * 
 * When distributing the Covered Code, include this CDDL Header Notice in each file
 * and include the License file at identityconnectors/legal/license.txt.
 * If applicable, add the following below this CDDL Header, with the fields 
 * enclosed by brackets [] replaced by your own identifying information: 
 * "Portions Copyrighted [year] [name of copyright owner]"
 * ====================
 */
package org.identityconnectors.toolkitmodule;

import javax.swing.JFileChooser;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.JTextField;
import org.netbeans.spi.project.support.ant.EditableProperties;
import org.netbeans.spi.project.support.ant.PropertyUtils;

public final class inputVisualPanel1 extends JPanel {

    /** Creates new form inputVisualPanel1 */
    public inputVisualPanel1() {
        initComponents();
        txtResourceName.setText("MyResource");
        txtPackageName.setText("org.identityconnectors.myresource");
        EditableProperties gProps = PropertyUtils.getGlobalProperties();
        String toolkitLoc = gProps.getProperty("toolkit.loc");
        if(toolkitLoc != null && toolkitLoc.length() > 0) {
            txtToolkitLoc.setText(toolkitLoc);
        }
    }

    @Override
    public String getName() {
        return "Set Properties";
    }

    public JTextField getTxtToolkitLoc() {
        return txtToolkitLoc;
    }

    public JTextField getTxtBundleDir() {
        return txtBundleDir;
    }

    public JTextField getTxtResourceName() {
        return txtResourceName;
    }

    public JTextField getTxtPackageName() {
        return txtPackageName;
    }

    public JLabel getLblError() {
        return lblError;
    }

    private void showChooser(JTextField target) {
        JFileChooser chooser = new JFileChooser();
        chooser.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
        int returnVal = -1;
        if (target == txtBundleDir) {
            chooser.setDialogTitle("Choose a bundle directory (or create a new one)");
            returnVal = chooser.showDialog(this, "Use this directory");
        } else if (target == txtToolkitLoc) {
            chooser.setDialogTitle("Choose the extracted toolkit location");
            returnVal = chooser.showDialog(this, "Choose");
        }
        if (returnVal == JFileChooser.APPROVE_OPTION) {
            String path = chooser.getSelectedFile().getAbsolutePath();
            target.setText(path);
        }
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        txtBundleDir = new javax.swing.JTextField();
        btnBundleDir = new javax.swing.JButton();
        lblBundleDir = new javax.swing.JLabel();
        lblResourceName = new javax.swing.JLabel();
        lblPackageName = new javax.swing.JLabel();
        txtResourceName = new javax.swing.JTextField();
        txtPackageName = new javax.swing.JTextField();
        lblToolkitLoc = new javax.swing.JLabel();
        txtToolkitLoc = new javax.swing.JTextField();
        btnToolkitLoc = new javax.swing.JButton();
        lblWarning = new javax.swing.JLabel();
        lblError = new javax.swing.JLabel();

        txtBundleDir.setToolTipText("Where to create the new Connector bundle"); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(btnBundleDir, "Choose..."); // NOI18N
        btnBundleDir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBundleDirActionPerformed(evt);
            }
        });

        org.openide.awt.Mnemonics.setLocalizedText(lblBundleDir, "Bundle Directory:"); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(lblResourceName, "Resource Name:"); // NOI18N
        lblResourceName.setToolTipText("null");

        org.openide.awt.Mnemonics.setLocalizedText(lblPackageName, "Package Name:"); // NOI18N

        txtResourceName.setToolTipText("The name of your target resource (Ldap, Unix, etc.)"); // NOI18N
        txtResourceName.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtResourceNameKeyReleased(evt);
            }
        });

        txtPackageName.setToolTipText("The package name for generated Connector source files"); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(lblToolkitLoc, "Toolkit Location:"); // NOI18N

        txtToolkitLoc.setToolTipText("Where you extracted the Connectors Toolkit"); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(btnToolkitLoc, "Choose..."); // NOI18N
        btnToolkitLoc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnToolkitLocActionPerformed(evt);
            }
        });

        lblWarning.setFont(new java.awt.Font("DejaVu Sans", 0, 10));
        org.openide.awt.Mnemonics.setLocalizedText(lblWarning, "*Note: This will destroy any contents of the bundle directory."); // NOI18N

        lblError.setFont(new java.awt.Font("Nice", 1, 12));
        lblError.setForeground(new java.awt.Color(255, 0, 0));

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(layout.createSequentialGroup()
                        .add(12, 12, 12)
                        .add(lblError, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 526, Short.MAX_VALUE))
                    .add(layout.createSequentialGroup()
                        .addContainerGap()
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(lblToolkitLoc)
                            .add(lblBundleDir)
                            .add(lblResourceName)
                            .add(lblPackageName))
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(txtPackageName, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 326, Short.MAX_VALUE)
                            .add(txtResourceName, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 326, Short.MAX_VALUE)
                            .add(txtBundleDir, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 326, Short.MAX_VALUE)
                            .add(org.jdesktop.layout.GroupLayout.TRAILING, txtToolkitLoc, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 326, Short.MAX_VALUE)
                            .add(lblWarning))
                        .add(6, 6, 6)
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(btnBundleDir)
                            .add(btnToolkitLoc))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(lblToolkitLoc)
                    .add(btnToolkitLoc)
                    .add(txtToolkitLoc, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(lblBundleDir)
                    .add(btnBundleDir)
                    .add(txtBundleDir, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .add(1, 1, 1)
                .add(lblWarning)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(lblResourceName)
                    .add(txtResourceName, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(lblPackageName)
                    .add(txtPackageName, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(lblError)
                .addContainerGap(134, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnBundleDirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBundleDirActionPerformed
        showChooser(txtBundleDir);
    }//GEN-LAST:event_btnBundleDirActionPerformed

    private void txtResourceNameKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtResourceNameKeyReleased
        String resourceName = txtResourceName.getText();
        if (resourceName.length() > 0) {
            String text = "org.identityconnectors." + resourceName.toLowerCase();
            txtPackageName.setText(text);
        }
    }//GEN-LAST:event_txtResourceNameKeyReleased

    private void btnToolkitLocActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnToolkitLocActionPerformed
        showChooser(txtToolkitLoc);
}//GEN-LAST:event_btnToolkitLocActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBundleDir;
    private javax.swing.JButton btnToolkitLoc;
    private javax.swing.JLabel lblBundleDir;
    private javax.swing.JLabel lblError;
    private javax.swing.JLabel lblPackageName;
    private javax.swing.JLabel lblResourceName;
    private javax.swing.JLabel lblToolkitLoc;
    private javax.swing.JLabel lblWarning;
    private javax.swing.JTextField txtBundleDir;
    private javax.swing.JTextField txtPackageName;
    private javax.swing.JTextField txtResourceName;
    private javax.swing.JTextField txtToolkitLoc;
    // End of variables declaration//GEN-END:variables
}

